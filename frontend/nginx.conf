server {
    listen 3000;
    server_name localhost;

    # Allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # Disable buffering
    proxy_buffering off;
    proxy_request_buffering off;

    # Serve static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    location /api/ {
        proxy_pass http://volweb-backend:8000;
        proxy_set_header Host $host;
    }

    location /core/ {
        proxy_pass http://volweb-backend:8000;
        proxy_set_header Host $host;
    }

    location /admin/ {
        proxy_pass http://volweb-backend:8000/admin/;
        proxy_set_header Host $host;
    }

    location /static/ {
        alias /home/app/web/staticfiles/;
    }

    location /media/ {
        alias /home/app/web/media/;
	    autoindex on;
    }

    # WebSocket proxy
    location /ws/ {
        proxy_pass http://volweb-backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }


    location /minio/ {
        # Remove /minio prefix before proxying
        rewrite ^/minio/(.*)$ /$1 break;

        proxy_set_header Host $host;  # Preserve the Host header
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_request_headers on;

        # Proxy the request to MinIO
        proxy_pass http://volweb-minio:9000;

        # Handle CORS if necessary
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods 'GET, PUT, POST, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers '*' always;

        # Handle Preflight Requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Fallback for SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }
}
