version: "3.9"
services:
  volweb-postgresdb:
    container_name: volweb-postgresdb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    image: postgres:14.1
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  volweb-redis:
    container_name: volweb-redis
    image: "redis:latest"
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - "redis-data:/data"
    ports:
      - "6379:6379"

  volweb-minio:
    container_name: volweb-minio
    image: minio/minio
    network_mode: "host"
    restart: always
    volumes:
      - minio_storage:/data
      - ./minio/privkey.pem:/root/.minio/certs/private.key
      - ./minio/fullchain.pem:/root/.minio/certs/public.crt
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":9001" /data

  volweb_platform:
    container_name: volweb_platform
    environment:
      - DATABASE=${DATABASE}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DJANGO_SECRET=${DJANGO_SECRET}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_ENDPOINT_HOST=${AWS_ENDPOINT_HOST}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - SSL_CERT_FILE=/etc/ssl/certs/minio.pem
    build:
      context: ../
      dockerfile: docker/Dockerfile
    command: daphne -u /tmp/daphne.sock -b 0.0.0.0 -p 8000 VolWeb.asgi:application
    expose:
      - 8000
    depends_on:
      - volweb-postgresdb
      - volweb-redis
      - volweb-minio
    restart: always
    volumes:
      - staticfiles:/home/app/web/staticfiles
      - ./minio/fullchain.pem:/etc/ssl/certs/minio.pem
      - media:/home/app/web/media

  volweb_workers:
    environment:
      - DATABASE=${DATABASE}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DJANGO_SECRET=${DJANGO_SECRET}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_ENDPOINT_HOST=${AWS_ENDPOINT_HOST}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/minio.pem
    build:
      context: ../
      dockerfile: docker/Dockerfile
    command: celery -A VolWeb worker --loglevel=INFO
    depends_on:
      - volweb-redis
      - volweb-postgresdb
      - volweb-minio
    restart: always
    volumes:
      - staticfiles:/home/app/web/staticfiles
      - ./minio/fullchain.pem:/etc/ssl/certs/minio.pem
      - media:/home/app/web/media
    deploy:
      mode: replicated
      replicas: 2

  nginx:
    container_name: volweb_nginx
    image: nginx:mainline-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/ssl/:/etc/nginx/certs/
      - staticfiles:/home/app/web/staticfiles
      - media:/home/app/web/media
    depends_on:
      - volweb_platform

volumes:
  minio_storage:
  postgres-data:
  redis-data:
  staticfiles:
  media:
